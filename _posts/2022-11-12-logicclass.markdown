---
title: 독후감 / 맥킨지 논리력 수업
date: 2022-11-12 00:00:03 +0000
categories: [Chat, Review]
tags: [review]
seo:
  date_modified: 2022-11-12 00:00:03 +0000
---

<br/>

<img src="/assets/img/chat/logicclass1.jpg">

<br/>

# <b>맥킨지 논리력 수업 (저우궈위안)</b>

논리적 사고, 비판적 사고, 전략가적 사고가 무엇인지 소개하고 그 방법론을 제시한다.  

맥킨지 내부의 맥킨지 아카데미에서는 문제의 분해와 해결을 위한 7단계 법칙을 가르친다고 한다.  

> 문제 설명, 문제 분해, 문제 계획, 정보 정리, 분석과 논증, 제안 제시, 솔루션 제출.

<br/>

저작권(?)의 문제일지는 모르겠지만 저자는 이것을 조금 축약하여 5단계로 풀어써주었다.  

> 문제 정의 &rarr; 구조화 분석 &rarr; 반복적인 (가설 제기 &rarr; 가설 검증) &rarr; 제출  

<br/>

각 단계에서 제시하는 방법론들이 꽤나 설득력이 있어서 책을 읽는 것만으로 똑똑해진 기분이 들었다.  

이론을 배웠으니 팀에서 만들고 있는 `게임 이상 탐지 제품`에 위 프레임 중 처음이 되는 문제 정의라는 것을 적용해보자. 문제를 정의한다는 행위는 우리가 지금 무슨 문제를 해결하고 있는가의 질문에 답하는 것인데, 이는 경험과 지식에 기반한 `전문가적 사고`와, 수요와 시장에 기반한 `전략가적 사고`의 방식으로 나누어 수행할 수 있다.  

`전문가적 사고`는 상향적 사고라고도 부른다. 이는 기초적(아래쪽)인 세부 지식을 쌓은 후, 그와 관련한 전문적인 판단을 내리는 방식이다. 전문가의 자신감은 대체로 그의 과거 경험에서 비롯한다. 전문가는 반복해서 발생하는 기술적 문제를 풀 때 효율적으로 최적의 솔루션을 제공할 수 있다.  

`전략가적 사고`는 반대로 하향적 사고라 볼 수 있다. 우선 문제 자체를 논리적으로 분해한 후, 각 분해 요소에 가설을 세우고 이를 검증한다. 각 요소와 가설을 순환하며 모든 세부 문제를 푸는 방식으로 솔루션을 제공한다.  

두 사고 방식은 상화 보완의 관계이다. 전문가적 사고는 시행착오를 피할 수 있게 해주며 적은 리소스로 높은 품질을 제품이 가질 수 있게 한다. 그러나 전문가적 사고에 기반한 의사결정은 지나치게 좁은 시야, 예를들어 제품 경쟁력 등에 치중하여 의사결정한다는 한계가 있다. 그거 벌써 내가 해봤는데~ 등의 사고 흐름을 통해 답을 찾아가는 과정은 비판 받을 여지가 많이 있을수도 있다. 오늘은 두 방식을 모두 사용하여 제품의 문제 정의를 진행해보자.  

<br/>

> <b> 전문가적 사고</b>  
>
> 고객이 이상 탐지 제품에게 기대하는 역할은 무엇일까? 이는 게임의 문제를 해결하는 것이다.  
>
> 게임에서 문제가 되는 이상 상황들은 무엇이 있을까?  
>
> 우리는 경험적으로 (대규모 작업장, 핵 프로그램, 기획 오류, 유저 부정 동향)으로 이를 분류했다.  
>
> 제품은 분류한 각 영역에 대한 과거 사례를 쌓아가고, 특징을 파악하고, 이를 패턴화하여 탐지한다.  
>
> 예를들어 대규모 작업장의 경우 아래와 같은 특징들을 갖는다.  
>
> > 기계적 매크로 특징
> >
> > 대규모의 군집화 특징  
> >
> > 수익화를 위한 재화 취합 특징  
>
> 특징을 사례별로 다시 더 세분화 된 형태로 패턴화하는, 탐지 프로세스를 효율화하며 제품은 성장한다.  
>
> 제품의 가치는 각 탐지 영역에 대한 기술적 누적에서 비롯한다.  
>
> 이것이 전문가적 사고에 기반한 제품 전략이다.  

<br/>

> **전략가적 사고**  
>
> 고객이 이상 탐지 제품에게 기대하는 역할은 무엇일까? 이는 게임의 문제를 해결하는 것이다.  
>
> 이론적으로 문제라는 것은 발생하고, 발견되고, 분석되고, 해결된다.  
>
> 따라서 제품은 (1) 발생 &rarr; 발견, (2) 발견 &rarr; 분석, (3) 분석 &rarr; 해결, 총 3개의 기능을 갖춰야한다.  
>
> <br/>
>
> - (1) 문제의 발견은 어떻게 쪼갤 수 있을까?  
>   - 기존에 모르고 있던 새로운 문제를 발견한다.  
>   - 해결되었다 인지하고 있던 문제의 재발을 발견한다.   
>
>   <br/>
>
> - (2) 문제의 분석은 어떻게 쪼갤 수 있을까?  
>   - 문제의 발생 원인을 분석한다.  
>   - 문제의 파급 효과를 분석한다.  
>   - 문제의 해결 방법을 분석한다.  
>
>   <br/>
>
> - 문제를 해결한다  
>   - 파악한 해결 방법을 구현한다.  
>   - 고객에게 제품 사용을 가이드한다.  
>
> <br/>
>
> 문제를 점점 쪼개어가며 하위의 요구사항을 만족시키는 기능을 기획하고 개발하며 제품은 성장한다.  
>
> 제품의 가치는 각 세부 요구사항의 완료율에서 비롯한다.
>
> 이것이 전략적 사고에 기반한 제품 전략이다.

<br/>

개인적으로 어떤 전략이 모든 상황에 더 우열하다고 생각들지는 않는다. 전략적으로 사고하는 것이 언뜻 더 완벽하고 똑똑해보이지만, 가시적인 성과를 만들고 특정 분야에 대한 날카로움을 갖기에는 불리할 수도 있을 것 같다.  

전략보다 더 중요한 것은, 팀의 구성원들이 어떤 사고방식에 더 깊이 공감하는가가 아닐까? 좋은 전략은 어떤 형태로 성장하는가에 대한 그림을 그릴 수 있게 한다. 하지만 얼마나 많이 성장하는가는 결국 개별 구성원의 동기부여에 의존하지 싶다.  

